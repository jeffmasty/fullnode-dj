// Generated by delombok at Wed Apr 20 02:15:35 MDT 2016
package org.fullnodej.data;

import java.math.BigDecimal;
import java.util.List;
import org.fullnodej.Rpc;

/**
 * @see <a href="https://bitcoin.org/en/developer-reference#getblock">getblock wiki</a><br/>
 * {@link Rpc#getblock(String)}
 */
public class Block {
	private List<String> tx;
	private long time;
	private int height;
	private long nonce;
	private String hash;
	private String bits;
	private BigDecimal difficulty;
	private String merkleroot;
	private String previousblockhash;
	private String nextblockhash;
	private int confirmations;
	private int version;
	private int size;
	private String chainwork;

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public Block() {
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public List<String> getTx() {
		return this.tx;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public long getTime() {
		return this.time;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getHeight() {
		return this.height;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public long getNonce() {
		return this.nonce;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getHash() {
		return this.hash;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getBits() {
		return this.bits;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BigDecimal getDifficulty() {
		return this.difficulty;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getMerkleroot() {
		return this.merkleroot;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getPreviousblockhash() {
		return this.previousblockhash;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getNextblockhash() {
		return this.nextblockhash;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getConfirmations() {
		return this.confirmations;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getVersion() {
		return this.version;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getSize() {
		return this.size;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getChainwork() {
		return this.chainwork;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setTx(final List<String> tx) {
		this.tx = tx;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setTime(final long time) {
		this.time = time;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setHeight(final int height) {
		this.height = height;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setNonce(final long nonce) {
		this.nonce = nonce;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setHash(final String hash) {
		this.hash = hash;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setBits(final String bits) {
		this.bits = bits;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setDifficulty(final BigDecimal difficulty) {
		this.difficulty = difficulty;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setMerkleroot(final String merkleroot) {
		this.merkleroot = merkleroot;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setPreviousblockhash(final String previousblockhash) {
		this.previousblockhash = previousblockhash;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setNextblockhash(final String nextblockhash) {
		this.nextblockhash = nextblockhash;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setConfirmations(final int confirmations) {
		this.confirmations = confirmations;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setVersion(final int version) {
		this.version = version;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setSize(final int size) {
		this.size = size;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setChainwork(final String chainwork) {
		this.chainwork = chainwork;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof Block)) return false;
		final Block other = (Block)o;
		if (!other.canEqual((java.lang.Object)this)) return false;
		final java.lang.Object this$tx = this.getTx();
		final java.lang.Object other$tx = other.getTx();
		if (this$tx == null ? other$tx != null : !this$tx.equals(other$tx)) return false;
		if (this.getTime() != other.getTime()) return false;
		if (this.getHeight() != other.getHeight()) return false;
		if (this.getNonce() != other.getNonce()) return false;
		final java.lang.Object this$hash = this.getHash();
		final java.lang.Object other$hash = other.getHash();
		if (this$hash == null ? other$hash != null : !this$hash.equals(other$hash)) return false;
		final java.lang.Object this$bits = this.getBits();
		final java.lang.Object other$bits = other.getBits();
		if (this$bits == null ? other$bits != null : !this$bits.equals(other$bits)) return false;
		final java.lang.Object this$difficulty = this.getDifficulty();
		final java.lang.Object other$difficulty = other.getDifficulty();
		if (this$difficulty == null ? other$difficulty != null : !this$difficulty.equals(other$difficulty)) return false;
		final java.lang.Object this$merkleroot = this.getMerkleroot();
		final java.lang.Object other$merkleroot = other.getMerkleroot();
		if (this$merkleroot == null ? other$merkleroot != null : !this$merkleroot.equals(other$merkleroot)) return false;
		final java.lang.Object this$previousblockhash = this.getPreviousblockhash();
		final java.lang.Object other$previousblockhash = other.getPreviousblockhash();
		if (this$previousblockhash == null ? other$previousblockhash != null : !this$previousblockhash.equals(other$previousblockhash)) return false;
		final java.lang.Object this$nextblockhash = this.getNextblockhash();
		final java.lang.Object other$nextblockhash = other.getNextblockhash();
		if (this$nextblockhash == null ? other$nextblockhash != null : !this$nextblockhash.equals(other$nextblockhash)) return false;
		if (this.getConfirmations() != other.getConfirmations()) return false;
		if (this.getVersion() != other.getVersion()) return false;
		if (this.getSize() != other.getSize()) return false;
		final java.lang.Object this$chainwork = this.getChainwork();
		final java.lang.Object other$chainwork = other.getChainwork();
		if (this$chainwork == null ? other$chainwork != null : !this$chainwork.equals(other$chainwork)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof Block;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final java.lang.Object $tx = this.getTx();
		result = result * PRIME + ($tx == null ? 43 : $tx.hashCode());
		final long $time = this.getTime();
		result = result * PRIME + (int)($time >>> 32 ^ $time);
		result = result * PRIME + this.getHeight();
		final long $nonce = this.getNonce();
		result = result * PRIME + (int)($nonce >>> 32 ^ $nonce);
		final java.lang.Object $hash = this.getHash();
		result = result * PRIME + ($hash == null ? 43 : $hash.hashCode());
		final java.lang.Object $bits = this.getBits();
		result = result * PRIME + ($bits == null ? 43 : $bits.hashCode());
		final java.lang.Object $difficulty = this.getDifficulty();
		result = result * PRIME + ($difficulty == null ? 43 : $difficulty.hashCode());
		final java.lang.Object $merkleroot = this.getMerkleroot();
		result = result * PRIME + ($merkleroot == null ? 43 : $merkleroot.hashCode());
		final java.lang.Object $previousblockhash = this.getPreviousblockhash();
		result = result * PRIME + ($previousblockhash == null ? 43 : $previousblockhash.hashCode());
		final java.lang.Object $nextblockhash = this.getNextblockhash();
		result = result * PRIME + ($nextblockhash == null ? 43 : $nextblockhash.hashCode());
		result = result * PRIME + this.getConfirmations();
		result = result * PRIME + this.getVersion();
		result = result * PRIME + this.getSize();
		final java.lang.Object $chainwork = this.getChainwork();
		result = result * PRIME + ($chainwork == null ? 43 : $chainwork.hashCode());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public java.lang.String toString() {
		return "Block(tx=" + this.getTx() + ", time=" + this.getTime() + ", height=" + this.getHeight() + ", nonce=" + this.getNonce() + ", hash=" + this.getHash() + ", bits=" + this.getBits() + ", difficulty=" + this.getDifficulty() + ", merkleroot=" + this.getMerkleroot() + ", previousblockhash=" + this.getPreviousblockhash() + ", nextblockhash=" + this.getNextblockhash() + ", confirmations=" + this.getConfirmations() + ", version=" + this.getVersion() + ", size=" + this.getSize() + ", chainwork=" + this.getChainwork() + ")";
	}
}