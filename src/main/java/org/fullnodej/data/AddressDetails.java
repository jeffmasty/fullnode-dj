// Generated by delombok at Wed Apr 20 02:15:35 MDT 2016
package org.fullnodej.data;

import java.math.BigDecimal;

public class AddressDetails {
	
	/**
	 * Base58 address
	 */
	String Address;
	
	/**
	 * Current spendable balance of the address, not counting unconfirmed transactions
	 */
	BigDecimal Balance;
	
	/**
	 * account the address belongs to, if any. This field will not be returned for change addresses.
	 * The default account is an empty string
	 */
	String Account;

	public AddressDetails(String address) {
		this.Address = address;
	}

	public AddressDetails(BigDecimal balance) {
		this.Balance = balance;
	}

	public AddressDetails(double balance) {
		this.Balance = new BigDecimal(balance);
	}

	public AddressDetails(String address, BigDecimal balance) {
		this.Address = address;
		this.Balance = balance;
	}

	@Override
	public String toString() {
		String result = "";
		if (Address != null) result += Address + " ";
		if (Balance != null) result += Balance;
		if (Account != null) result += " " + Account;
		return result;
	}

	/**
	 * Base58 address
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getAddress() {
		return this.Address;
	}

	/**
	 * Current spendable balance of the address, not counting unconfirmed transactions
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BigDecimal getBalance() {
		return this.Balance;
	}

	/**
	 * account the address belongs to, if any. This field will not be returned for change addresses.
	 * The default account is an empty string
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getAccount() {
		return this.Account;
	}

	/**
	 * Base58 address
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setAddress(final String Address) {
		this.Address = Address;
	}

	/**
	 * Current spendable balance of the address, not counting unconfirmed transactions
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setBalance(final BigDecimal Balance) {
		this.Balance = Balance;
	}

	/**
	 * account the address belongs to, if any. This field will not be returned for change addresses.
	 * The default account is an empty string
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setAccount(final String Account) {
		this.Account = Account;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof AddressDetails)) return false;
		final AddressDetails other = (AddressDetails)o;
		if (!other.canEqual((java.lang.Object)this)) return false;
		final java.lang.Object this$Address = this.getAddress();
		final java.lang.Object other$Address = other.getAddress();
		if (this$Address == null ? other$Address != null : !this$Address.equals(other$Address)) return false;
		final java.lang.Object this$Balance = this.getBalance();
		final java.lang.Object other$Balance = other.getBalance();
		if (this$Balance == null ? other$Balance != null : !this$Balance.equals(other$Balance)) return false;
		final java.lang.Object this$Account = this.getAccount();
		final java.lang.Object other$Account = other.getAccount();
		if (this$Account == null ? other$Account != null : !this$Account.equals(other$Account)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof AddressDetails;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final java.lang.Object $Address = this.getAddress();
		result = result * PRIME + ($Address == null ? 43 : $Address.hashCode());
		final java.lang.Object $Balance = this.getBalance();
		result = result * PRIME + ($Balance == null ? 43 : $Balance.hashCode());
		final java.lang.Object $Account = this.getAccount();
		result = result * PRIME + ($Account == null ? 43 : $Account.hashCode());
		return result;
	}

	@java.beans.ConstructorProperties({"Address", "Balance", "Account"})
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public AddressDetails(final String Address, final BigDecimal Balance, final String Account) {
		this.Address = Address;
		this.Balance = Balance;
		this.Account = Account;
	}
}