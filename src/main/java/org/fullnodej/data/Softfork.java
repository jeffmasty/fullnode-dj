// Generated by delombok at Wed Apr 20 02:15:35 MDT 2016
package org.fullnodej.data;

public class Softfork {
	String id;
	int version;
	SoftforkPolicy enforce;
	SoftforkPolicy reject;

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public Softfork() {
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getId() {
		return this.id;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getVersion() {
		return this.version;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public SoftforkPolicy getEnforce() {
		return this.enforce;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public SoftforkPolicy getReject() {
		return this.reject;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setId(final String id) {
		this.id = id;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setVersion(final int version) {
		this.version = version;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setEnforce(final SoftforkPolicy enforce) {
		this.enforce = enforce;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setReject(final SoftforkPolicy reject) {
		this.reject = reject;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof Softfork)) return false;
		final Softfork other = (Softfork)o;
		if (!other.canEqual((java.lang.Object)this)) return false;
		final java.lang.Object this$id = this.getId();
		final java.lang.Object other$id = other.getId();
		if (this$id == null ? other$id != null : !this$id.equals(other$id)) return false;
		if (this.getVersion() != other.getVersion()) return false;
		final java.lang.Object this$enforce = this.getEnforce();
		final java.lang.Object other$enforce = other.getEnforce();
		if (this$enforce == null ? other$enforce != null : !this$enforce.equals(other$enforce)) return false;
		final java.lang.Object this$reject = this.getReject();
		final java.lang.Object other$reject = other.getReject();
		if (this$reject == null ? other$reject != null : !this$reject.equals(other$reject)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof Softfork;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final java.lang.Object $id = this.getId();
		result = result * PRIME + ($id == null ? 43 : $id.hashCode());
		result = result * PRIME + this.getVersion();
		final java.lang.Object $enforce = this.getEnforce();
		result = result * PRIME + ($enforce == null ? 43 : $enforce.hashCode());
		final java.lang.Object $reject = this.getReject();
		result = result * PRIME + ($reject == null ? 43 : $reject.hashCode());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public java.lang.String toString() {
		return "Softfork(id=" + this.getId() + ", version=" + this.getVersion() + ", enforce=" + this.getEnforce() + ", reject=" + this.getReject() + ")";
	}
}