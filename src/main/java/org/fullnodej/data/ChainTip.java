// Generated by delombok at Wed Apr 20 02:15:35 MDT 2016
package org.fullnodej.data;

import org.fullnodej.Rpc;

/**
 * Information about the highest-height block (tip) of each local block chain.
 * @see Rpc#getchaintips()
 */
public class ChainTip {
	
	/**
	 * height of the highest block on this chain
	 */
	int height;
	
	/**
	 * hash of highest block as hex
	 */
	String hash;
	
	/**
	 * Number of blocks on this chain but not on the main chain.
	 * For the best chain this will be 0, for others it will be >= 1
	 */
	int branchlen;
	ChainTipStatus status;

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public ChainTip() {
	}

	/**
	 * height of the highest block on this chain
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getHeight() {
		return this.height;
	}

	/**
	 * hash of highest block as hex
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getHash() {
		return this.hash;
	}

	/**
	 * Number of blocks on this chain but not on the main chain.
	 * For the best chain this will be 0, for others it will be >= 1
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getBranchlen() {
		return this.branchlen;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public ChainTipStatus getStatus() {
		return this.status;
	}

	/**
	 * height of the highest block on this chain
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setHeight(final int height) {
		this.height = height;
	}

	/**
	 * hash of highest block as hex
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setHash(final String hash) {
		this.hash = hash;
	}

	/**
	 * Number of blocks on this chain but not on the main chain.
	 * For the best chain this will be 0, for others it will be >= 1
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setBranchlen(final int branchlen) {
		this.branchlen = branchlen;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setStatus(final ChainTipStatus status) {
		this.status = status;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof ChainTip)) return false;
		final ChainTip other = (ChainTip)o;
		if (!other.canEqual((java.lang.Object)this)) return false;
		if (this.getHeight() != other.getHeight()) return false;
		final java.lang.Object this$hash = this.getHash();
		final java.lang.Object other$hash = other.getHash();
		if (this$hash == null ? other$hash != null : !this$hash.equals(other$hash)) return false;
		if (this.getBranchlen() != other.getBranchlen()) return false;
		final java.lang.Object this$status = this.getStatus();
		final java.lang.Object other$status = other.getStatus();
		if (this$status == null ? other$status != null : !this$status.equals(other$status)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof ChainTip;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		result = result * PRIME + this.getHeight();
		final java.lang.Object $hash = this.getHash();
		result = result * PRIME + ($hash == null ? 43 : $hash.hashCode());
		result = result * PRIME + this.getBranchlen();
		final java.lang.Object $status = this.getStatus();
		result = result * PRIME + ($status == null ? 43 : $status.hashCode());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public java.lang.String toString() {
		return "ChainTip(height=" + this.getHeight() + ", hash=" + this.getHash() + ", branchlen=" + this.getBranchlen() + ", status=" + this.getStatus() + ")";
	}
}