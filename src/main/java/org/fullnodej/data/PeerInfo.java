// Generated by delombok at Wed Apr 20 02:15:35 MDT 2016
package org.fullnodej.data;

import java.math.BigDecimal;

/**
 * data about each connected network node.
 * @see <a href="https://bitcoin.org/en/developer-reference#getpeerinfo">getpeerinfo wiki</a>
 */
public class PeerInfo {
	
	/**
	 * index number in the local node address database.<br/>Added in Bitcoin Core 0.10.0
	 */
	int id;
	
	/**
	 * IP address and port to the remote node
	 */
	String addr;
	
	/**
	 * Our IP address and port according to the remote node. May be incorrect due to error or lying. Many SPV nodes set this to 127.0.0.1:8333
	 */
	String addrlocal;
	
	/**
	 * hex string of services advertised by the remote node in its version message
	 */
	String services;
	long lastsend;
	long lastrecv;
	long bytessent;
	long bytesrecv;
	long conntime;
	long timeoffset;
	BigDecimal pingtime;
	BigDecimal pingwait;
	int version;
	String subver;
	boolean inbound;
	int startingheight;
	int banscore;
	int synced_headers;
	int synced_blocks;
	
	/**
	 * array of blocks which have been requested from this peer. May be empty<br/>Added in Bitcoin Core 0.10.0
	 */
	String[] inflight;
	boolean whitelisted;

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public PeerInfo() {
	}

	/**
	 * index number in the local node address database.<br/>Added in Bitcoin Core 0.10.0
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getId() {
		return this.id;
	}

	/**
	 * IP address and port to the remote node
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getAddr() {
		return this.addr;
	}

	/**
	 * Our IP address and port according to the remote node. May be incorrect due to error or lying. Many SPV nodes set this to 127.0.0.1:8333
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getAddrlocal() {
		return this.addrlocal;
	}

	/**
	 * hex string of services advertised by the remote node in its version message
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getServices() {
		return this.services;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public long getLastsend() {
		return this.lastsend;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public long getLastrecv() {
		return this.lastrecv;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public long getBytessent() {
		return this.bytessent;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public long getBytesrecv() {
		return this.bytesrecv;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public long getConntime() {
		return this.conntime;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public long getTimeoffset() {
		return this.timeoffset;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BigDecimal getPingtime() {
		return this.pingtime;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BigDecimal getPingwait() {
		return this.pingwait;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getVersion() {
		return this.version;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getSubver() {
		return this.subver;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean isInbound() {
		return this.inbound;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getStartingheight() {
		return this.startingheight;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getBanscore() {
		return this.banscore;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getSynced_headers() {
		return this.synced_headers;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getSynced_blocks() {
		return this.synced_blocks;
	}

	/**
	 * array of blocks which have been requested from this peer. May be empty<br/>Added in Bitcoin Core 0.10.0
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String[] getInflight() {
		return this.inflight;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean isWhitelisted() {
		return this.whitelisted;
	}

	/**
	 * index number in the local node address database.<br/>Added in Bitcoin Core 0.10.0
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setId(final int id) {
		this.id = id;
	}

	/**
	 * IP address and port to the remote node
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setAddr(final String addr) {
		this.addr = addr;
	}

	/**
	 * Our IP address and port according to the remote node. May be incorrect due to error or lying. Many SPV nodes set this to 127.0.0.1:8333
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setAddrlocal(final String addrlocal) {
		this.addrlocal = addrlocal;
	}

	/**
	 * hex string of services advertised by the remote node in its version message
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setServices(final String services) {
		this.services = services;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setLastsend(final long lastsend) {
		this.lastsend = lastsend;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setLastrecv(final long lastrecv) {
		this.lastrecv = lastrecv;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setBytessent(final long bytessent) {
		this.bytessent = bytessent;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setBytesrecv(final long bytesrecv) {
		this.bytesrecv = bytesrecv;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setConntime(final long conntime) {
		this.conntime = conntime;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setTimeoffset(final long timeoffset) {
		this.timeoffset = timeoffset;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setPingtime(final BigDecimal pingtime) {
		this.pingtime = pingtime;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setPingwait(final BigDecimal pingwait) {
		this.pingwait = pingwait;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setVersion(final int version) {
		this.version = version;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setSubver(final String subver) {
		this.subver = subver;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setInbound(final boolean inbound) {
		this.inbound = inbound;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setStartingheight(final int startingheight) {
		this.startingheight = startingheight;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setBanscore(final int banscore) {
		this.banscore = banscore;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setSynced_headers(final int synced_headers) {
		this.synced_headers = synced_headers;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setSynced_blocks(final int synced_blocks) {
		this.synced_blocks = synced_blocks;
	}

	/**
	 * array of blocks which have been requested from this peer. May be empty<br/>Added in Bitcoin Core 0.10.0
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setInflight(final String[] inflight) {
		this.inflight = inflight;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setWhitelisted(final boolean whitelisted) {
		this.whitelisted = whitelisted;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof PeerInfo)) return false;
		final PeerInfo other = (PeerInfo)o;
		if (!other.canEqual((java.lang.Object)this)) return false;
		if (this.getId() != other.getId()) return false;
		final java.lang.Object this$addr = this.getAddr();
		final java.lang.Object other$addr = other.getAddr();
		if (this$addr == null ? other$addr != null : !this$addr.equals(other$addr)) return false;
		final java.lang.Object this$addrlocal = this.getAddrlocal();
		final java.lang.Object other$addrlocal = other.getAddrlocal();
		if (this$addrlocal == null ? other$addrlocal != null : !this$addrlocal.equals(other$addrlocal)) return false;
		final java.lang.Object this$services = this.getServices();
		final java.lang.Object other$services = other.getServices();
		if (this$services == null ? other$services != null : !this$services.equals(other$services)) return false;
		if (this.getLastsend() != other.getLastsend()) return false;
		if (this.getLastrecv() != other.getLastrecv()) return false;
		if (this.getBytessent() != other.getBytessent()) return false;
		if (this.getBytesrecv() != other.getBytesrecv()) return false;
		if (this.getConntime() != other.getConntime()) return false;
		if (this.getTimeoffset() != other.getTimeoffset()) return false;
		final java.lang.Object this$pingtime = this.getPingtime();
		final java.lang.Object other$pingtime = other.getPingtime();
		if (this$pingtime == null ? other$pingtime != null : !this$pingtime.equals(other$pingtime)) return false;
		final java.lang.Object this$pingwait = this.getPingwait();
		final java.lang.Object other$pingwait = other.getPingwait();
		if (this$pingwait == null ? other$pingwait != null : !this$pingwait.equals(other$pingwait)) return false;
		if (this.getVersion() != other.getVersion()) return false;
		final java.lang.Object this$subver = this.getSubver();
		final java.lang.Object other$subver = other.getSubver();
		if (this$subver == null ? other$subver != null : !this$subver.equals(other$subver)) return false;
		if (this.isInbound() != other.isInbound()) return false;
		if (this.getStartingheight() != other.getStartingheight()) return false;
		if (this.getBanscore() != other.getBanscore()) return false;
		if (this.getSynced_headers() != other.getSynced_headers()) return false;
		if (this.getSynced_blocks() != other.getSynced_blocks()) return false;
		if (!java.util.Arrays.deepEquals(this.getInflight(), other.getInflight())) return false;
		if (this.isWhitelisted() != other.isWhitelisted()) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof PeerInfo;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		result = result * PRIME + this.getId();
		final java.lang.Object $addr = this.getAddr();
		result = result * PRIME + ($addr == null ? 43 : $addr.hashCode());
		final java.lang.Object $addrlocal = this.getAddrlocal();
		result = result * PRIME + ($addrlocal == null ? 43 : $addrlocal.hashCode());
		final java.lang.Object $services = this.getServices();
		result = result * PRIME + ($services == null ? 43 : $services.hashCode());
		final long $lastsend = this.getLastsend();
		result = result * PRIME + (int)($lastsend >>> 32 ^ $lastsend);
		final long $lastrecv = this.getLastrecv();
		result = result * PRIME + (int)($lastrecv >>> 32 ^ $lastrecv);
		final long $bytessent = this.getBytessent();
		result = result * PRIME + (int)($bytessent >>> 32 ^ $bytessent);
		final long $bytesrecv = this.getBytesrecv();
		result = result * PRIME + (int)($bytesrecv >>> 32 ^ $bytesrecv);
		final long $conntime = this.getConntime();
		result = result * PRIME + (int)($conntime >>> 32 ^ $conntime);
		final long $timeoffset = this.getTimeoffset();
		result = result * PRIME + (int)($timeoffset >>> 32 ^ $timeoffset);
		final java.lang.Object $pingtime = this.getPingtime();
		result = result * PRIME + ($pingtime == null ? 43 : $pingtime.hashCode());
		final java.lang.Object $pingwait = this.getPingwait();
		result = result * PRIME + ($pingwait == null ? 43 : $pingwait.hashCode());
		result = result * PRIME + this.getVersion();
		final java.lang.Object $subver = this.getSubver();
		result = result * PRIME + ($subver == null ? 43 : $subver.hashCode());
		result = result * PRIME + (this.isInbound() ? 79 : 97);
		result = result * PRIME + this.getStartingheight();
		result = result * PRIME + this.getBanscore();
		result = result * PRIME + this.getSynced_headers();
		result = result * PRIME + this.getSynced_blocks();
		result = result * PRIME + java.util.Arrays.deepHashCode(this.getInflight());
		result = result * PRIME + (this.isWhitelisted() ? 79 : 97);
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public java.lang.String toString() {
		return "PeerInfo(id=" + this.getId() + ", addr=" + this.getAddr() + ", addrlocal=" + this.getAddrlocal() + ", services=" + this.getServices() + ", lastsend=" + this.getLastsend() + ", lastrecv=" + this.getLastrecv() + ", bytessent=" + this.getBytessent() + ", bytesrecv=" + this.getBytesrecv() + ", conntime=" + this.getConntime() + ", timeoffset=" + this.getTimeoffset() + ", pingtime=" + this.getPingtime() + ", pingwait=" + this.getPingwait() + ", version=" + this.getVersion() + ", subver=" + this.getSubver() + ", inbound=" + this.isInbound() + ", startingheight=" + this.getStartingheight() + ", banscore=" + this.getBanscore() + ", synced_headers=" + this.getSynced_headers() + ", synced_blocks=" + this.getSynced_blocks() + ", inflight=" + java.util.Arrays.deepToString(this.getInflight()) + ", whitelisted=" + this.isWhitelisted() + ")";
	}
}
/*{id=1, addr=123.456.789.1:18333, addrlocal=101.10.101.2:36059, services=0000000000000001, lastsend=1460312403,
 * lastrecv=1460312499, bytessent=400668, bytesrecv=1581891, conntime=1460155988, timeoffset=0, pingtime=0.161459, version=70002,
 * subver=/Satoshi:0.11.2/, inbound=false, startingheight=763572, banscore=0, synced_headers=764451, synced_blocks=764451,
 * inflight=[], whitelisted=false}*/