// Generated by delombok at Wed Apr 20 02:15:35 MDT 2016
package org.fullnodej.data;

import java.math.BigDecimal;
import java.util.List;
import org.fullnodej.Rpc;

/**
 * a description of a Tx in the mempool.
 * @see Rpc#getrawmempool()
 */
public class MempoolTx {
	int size;
	BigDecimal fee;
	long time;
	int height;
	int startingpriority;
	int currentpriority;
	List<String> depends;

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public MempoolTx() {
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getSize() {
		return this.size;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public BigDecimal getFee() {
		return this.fee;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public long getTime() {
		return this.time;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getHeight() {
		return this.height;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getStartingpriority() {
		return this.startingpriority;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getCurrentpriority() {
		return this.currentpriority;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public List<String> getDepends() {
		return this.depends;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setSize(final int size) {
		this.size = size;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setFee(final BigDecimal fee) {
		this.fee = fee;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setTime(final long time) {
		this.time = time;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setHeight(final int height) {
		this.height = height;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setStartingpriority(final int startingpriority) {
		this.startingpriority = startingpriority;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setCurrentpriority(final int currentpriority) {
		this.currentpriority = currentpriority;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setDepends(final List<String> depends) {
		this.depends = depends;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof MempoolTx)) return false;
		final MempoolTx other = (MempoolTx)o;
		if (!other.canEqual((java.lang.Object)this)) return false;
		if (this.getSize() != other.getSize()) return false;
		final java.lang.Object this$fee = this.getFee();
		final java.lang.Object other$fee = other.getFee();
		if (this$fee == null ? other$fee != null : !this$fee.equals(other$fee)) return false;
		if (this.getTime() != other.getTime()) return false;
		if (this.getHeight() != other.getHeight()) return false;
		if (this.getStartingpriority() != other.getStartingpriority()) return false;
		if (this.getCurrentpriority() != other.getCurrentpriority()) return false;
		final java.lang.Object this$depends = this.getDepends();
		final java.lang.Object other$depends = other.getDepends();
		if (this$depends == null ? other$depends != null : !this$depends.equals(other$depends)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof MempoolTx;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		result = result * PRIME + this.getSize();
		final java.lang.Object $fee = this.getFee();
		result = result * PRIME + ($fee == null ? 43 : $fee.hashCode());
		final long $time = this.getTime();
		result = result * PRIME + (int)($time >>> 32 ^ $time);
		result = result * PRIME + this.getHeight();
		result = result * PRIME + this.getStartingpriority();
		result = result * PRIME + this.getCurrentpriority();
		final java.lang.Object $depends = this.getDepends();
		result = result * PRIME + ($depends == null ? 43 : $depends.hashCode());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public java.lang.String toString() {
		return "MempoolTx(size=" + this.getSize() + ", fee=" + this.getFee() + ", time=" + this.getTime() + ", height=" + this.getHeight() + ", startingpriority=" + this.getStartingpriority() + ", currentpriority=" + this.getCurrentpriority() + ", depends=" + this.getDepends() + ")";
	}
}