// Generated by delombok at Wed Apr 20 02:15:35 MDT 2016
package org.fullnodej.data;

public class ReceivedByAccount {
	protected String amount;
	protected long confirmations;
	protected String account;
	protected boolean involvesWatchonly;

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public ReceivedByAccount() {
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getAmount() {
		return this.amount;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public long getConfirmations() {
		return this.confirmations;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getAccount() {
		return this.account;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean isInvolvesWatchonly() {
		return this.involvesWatchonly;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setAmount(final String amount) {
		this.amount = amount;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setConfirmations(final long confirmations) {
		this.confirmations = confirmations;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setAccount(final String account) {
		this.account = account;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setInvolvesWatchonly(final boolean involvesWatchonly) {
		this.involvesWatchonly = involvesWatchonly;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof ReceivedByAccount)) return false;
		final ReceivedByAccount other = (ReceivedByAccount)o;
		if (!other.canEqual((java.lang.Object)this)) return false;
		final java.lang.Object this$amount = this.getAmount();
		final java.lang.Object other$amount = other.getAmount();
		if (this$amount == null ? other$amount != null : !this$amount.equals(other$amount)) return false;
		if (this.getConfirmations() != other.getConfirmations()) return false;
		final java.lang.Object this$account = this.getAccount();
		final java.lang.Object other$account = other.getAccount();
		if (this$account == null ? other$account != null : !this$account.equals(other$account)) return false;
		if (this.isInvolvesWatchonly() != other.isInvolvesWatchonly()) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof ReceivedByAccount;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final java.lang.Object $amount = this.getAmount();
		result = result * PRIME + ($amount == null ? 43 : $amount.hashCode());
		final long $confirmations = this.getConfirmations();
		result = result * PRIME + (int)($confirmations >>> 32 ^ $confirmations);
		final java.lang.Object $account = this.getAccount();
		result = result * PRIME + ($account == null ? 43 : $account.hashCode());
		result = result * PRIME + (this.isInvolvesWatchonly() ? 79 : 97);
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public java.lang.String toString() {
		return "ReceivedByAccount(amount=" + this.getAmount() + ", confirmations=" + this.getConfirmations() + ", account=" + this.getAccount() + ", involvesWatchonly=" + this.isInvolvesWatchonly() + ")";
	}
}