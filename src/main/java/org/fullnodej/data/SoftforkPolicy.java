// Generated by delombok at Wed Apr 20 02:15:35 MDT 2016
package org.fullnodej.data;

public class SoftforkPolicy {
	boolean status;
	int found;
	int required;
	int window;

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public SoftforkPolicy() {
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean isStatus() {
		return this.status;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getFound() {
		return this.found;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getRequired() {
		return this.required;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getWindow() {
		return this.window;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setStatus(final boolean status) {
		this.status = status;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setFound(final int found) {
		this.found = found;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setRequired(final int required) {
		this.required = required;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setWindow(final int window) {
		this.window = window;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof SoftforkPolicy)) return false;
		final SoftforkPolicy other = (SoftforkPolicy)o;
		if (!other.canEqual((java.lang.Object)this)) return false;
		if (this.isStatus() != other.isStatus()) return false;
		if (this.getFound() != other.getFound()) return false;
		if (this.getRequired() != other.getRequired()) return false;
		if (this.getWindow() != other.getWindow()) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof SoftforkPolicy;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		result = result * PRIME + (this.isStatus() ? 79 : 97);
		result = result * PRIME + this.getFound();
		result = result * PRIME + this.getRequired();
		result = result * PRIME + this.getWindow();
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public java.lang.String toString() {
		return "SoftforkPolicy(status=" + this.isStatus() + ", found=" + this.getFound() + ", required=" + this.getRequired() + ", window=" + this.getWindow() + ")";
	}
}