// Generated by delombok at Wed Apr 20 02:15:35 MDT 2016
package org.fullnodej.data;

public class ScriptSig {
	
	/**
	 * The signature script in decoded form with non-data-pushing opcodes listed
	 */
	protected String asm;
	
	/**
	 * The signature script encoded as hex
	 */
	protected String hex;

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public ScriptSig() {
	}

	/**
	 * The signature script in decoded form with non-data-pushing opcodes listed
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getAsm() {
		return this.asm;
	}

	/**
	 * The signature script encoded as hex
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getHex() {
		return this.hex;
	}

	/**
	 * The signature script in decoded form with non-data-pushing opcodes listed
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setAsm(final String asm) {
		this.asm = asm;
	}

	/**
	 * The signature script encoded as hex
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setHex(final String hex) {
		this.hex = hex;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof ScriptSig)) return false;
		final ScriptSig other = (ScriptSig)o;
		if (!other.canEqual((java.lang.Object)this)) return false;
		final java.lang.Object this$asm = this.getAsm();
		final java.lang.Object other$asm = other.getAsm();
		if (this$asm == null ? other$asm != null : !this$asm.equals(other$asm)) return false;
		final java.lang.Object this$hex = this.getHex();
		final java.lang.Object other$hex = other.getHex();
		if (this$hex == null ? other$hex != null : !this$hex.equals(other$hex)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof ScriptSig;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final java.lang.Object $asm = this.getAsm();
		result = result * PRIME + ($asm == null ? 43 : $asm.hashCode());
		final java.lang.Object $hex = this.getHex();
		result = result * PRIME + ($hex == null ? 43 : $hex.hashCode());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public java.lang.String toString() {
		return "ScriptSig(asm=" + this.getAsm() + ", hex=" + this.getHex() + ")";
	}
}